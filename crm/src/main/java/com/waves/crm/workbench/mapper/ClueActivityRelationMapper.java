package com.waves.crm.workbench.mapper;

import com.waves.crm.workbench.domain.ClueActivityRelation;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Jul 17 21:12:52 GMT+08:00 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Jul 17 21:12:52 GMT+08:00 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Jul 17 21:12:52 GMT+08:00 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Jul 17 21:12:52 GMT+08:00 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Jul 17 21:12:52 GMT+08:00 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Jul 17 21:12:52 GMT+08:00 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 批量保存创建的市场活动的关联关系
     * @param clueActivityRelationList
     * @return
     */
    int insertClueActivityRelationByList(List<ClueActivityRelation> clueActivityRelationList);

    /**
     * 根据 activityId 和 clueId 删除市场活动关联关系
     * @param clueActivityRelation
     * @return
     */
    int deleteClueActivityRelationByClueIdActivityId(ClueActivityRelation clueActivityRelation);

    /**
     * 根据clueId查询线索与市场活动关联关系
     * @param clueId
     * @return
     */
    List<ClueActivityRelation> selectClueActivityRelationByClueId(String clueId);

    /**
     * 根据clueId 删除线索与市场活动关联关系
     * @param clueId
     * @return
     */
    int deleteClueActivityRelationByClueId(String clueId);
}