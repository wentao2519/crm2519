package com.waves.crm.workbench.mapper;

import com.waves.crm.workbench.domain.Customer;

import java.util.List;
import java.util.Map;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Sat Jul 23 18:23:30 GMT+08:00 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Sat Jul 23 18:23:30 GMT+08:00 2022
     */
    int insert(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Sat Jul 23 18:23:30 GMT+08:00 2022
     */
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Sat Jul 23 18:23:30 GMT+08:00 2022
     */
    Customer selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Sat Jul 23 18:23:30 GMT+08:00 2022
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Sat Jul 23 18:23:30 GMT+08:00 2022
     */
    int updateByPrimaryKey(Customer record);

    /**
     * 保存创建的客户
     * @param customer
     * @return
     */
    int insertCustomer(Customer customer);

    /**
     * 根据条件查询 customerList
     * @param map
     * @return
     */
    List<Customer> selectCustomerByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件查询客户总条数
     * @param map
     * @return
     */
    int selectCountOfCustomerByCondition(Map<String, Object> map);

    /**
     * 根据id删除客户
     * @param ids
     * @return
     */
    int deleteCustomerByIds(String[] ids);

    /**
     * 根据id查询客户信息
     * @param id
     * @return
     */
    Customer selectCustomerById(String id);

    /**
     * 修改客户信息
     * @param customer
     * @return
     */
    int updateCustomer(Customer customer);

    /**
     * 根据id查询客户详细信息
     * @param id
     * @return
     */
    Customer selectCustomerDetailInfoById(String id);

    /**
     * 根据name 模糊查询客户姓名
     * @param name
     * @return
     */
    List<String> selectCustomerNameByName(String name);

    /**
     * 根据name 精确查询客户
     * @param name
     * @return
     */
    Customer selectCustomerByName(String name);
}