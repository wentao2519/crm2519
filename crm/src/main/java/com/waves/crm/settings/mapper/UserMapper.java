package com.waves.crm.settings.mapper;

import com.waves.crm.settings.domain.User;

import java.util.List;
import java.util.Map;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_user
     *
     * @mbggenerated Sun Jun 05 22:13:27 GMT+08:00 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_user
     *
     * @mbggenerated Sun Jun 05 22:13:27 GMT+08:00 2022
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_user
     *
     * @mbggenerated Sun Jun 05 22:13:27 GMT+08:00 2022
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_user
     *
     * @mbggenerated Sun Jun 05 22:13:27 GMT+08:00 2022
     */
    User selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_user
     *
     * @mbggenerated Sun Jun 05 22:13:27 GMT+08:00 2022
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_user
     *
     * @mbggenerated Sun Jun 05 22:13:27 GMT+08:00 2022
     */
    int updateByPrimaryKey(User record);

    /**
     * 根据用户名和密码查询User
     * @param map
     * @return
     */
    User selectUserByLoginActAndPwd(Map<String, Object> map);

    /**
     * 查询所有用户
     * @return
     */
    List<User> selectAllUsers();

    /**
     * 根据id修改密码
     * @param map
     * @return
     */
    int updateLoginPwdById(Map<String, Object> map);

    /**
     * 根据登录密码查询用户
     * @param map
     * @return
     */
    User selectUserByIdAndLoginPwd(Map<String, Object> map);

    /**
     * 添加新用户
     * @return
     */
    int insertUser(User user);

    /**
     * 根据账号查询用户
     * @param loginAct
     * @return
     */
    User selectUserByLoginAct(String loginAct);

    /**
     * 根据姓名查询用户
     * @param name
     * @return
     */
    User selectUserByName(String name);
}